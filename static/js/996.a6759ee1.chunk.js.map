{"version":3,"file":"static/js/996.a6759ee1.chunk.js","mappings":"iQAOaA,GAJOC,EAAAA,GAAAA,KAAH,yCAIIA,EAAAA,GAAAA,MAAH,sEAKLC,GAAQD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,8kBA6BLG,EAASH,EAAAA,GAAAA,OAAH,oe,SCnCbI,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAAaE,MAAM,iBAC1BC,SAAUH,EAAAA,KAAaI,IAAI,EAAG,2BAGnBC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEC,cAAe,CAAEN,MAAO,GAAIC,SAAU,IACtCJ,iBAAkBA,EAClBU,SATiB,SAACC,EAAQC,GAC5BL,GAASM,EAAAA,EAAAA,IAAMF,IACfC,EAAQE,WACT,EAGC,SAKG,gBAAGC,EAAH,EAAGA,aAAH,OACC,UAAC,KAAD,CAAMC,aAAa,MAAnB,WACE,SAACrB,EAAD,CAAOsB,QAAQ,QAAf,oBACA,SAACpB,EAAD,CAAOqB,KAAK,QAAQC,KAAK,QAAQC,GAAG,WACpC,SAAC,KAAD,CAAcD,KAAK,QAAQE,UAAU,SAErC,SAAC1B,EAAD,CAAOsB,QAAQ,WAAf,uBACA,SAACpB,EAAD,CAAOqB,KAAK,WAAWC,KAAK,WAAWC,GAAG,cAC1C,SAAC,KAAD,CAAcD,KAAK,WAAWE,UAAU,SAExC,SAACtB,EAAD,CAAQmB,KAAK,SAASI,SAAUP,EAAhC,SACGA,EAAe,aAAe,aAXpC,GAiBN,ECxCc,SAASQ,IACtB,OACE,0BACE,SAACjB,EAAD,KAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","Pages/LoginPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Form = styled.form`\n  width: 320px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled(Field)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 300px;\n  box-sizing: border-box;\n  margin: 16px 0;\n  padding: 10px;\n\n  border: 1px solid #000;\n  color: black;\n  border-radius: 5px;\n  padding: 10px 25px;\n  background: #f5f5f5;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n\n  &:hover {\n    border-color: orange;\n  }\n\n  &: focus {\n    border-color: orange;\n  }\n`;\n\nexport const Button = styled.button`\n  border: 1px solid #000;\n  padding: 10px 25px;\n  color: black;\n  border-radius: 5px;\n  background: #f5f5f5;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n  boxshadow: 0px 0px 2px 2px rgb(red, 0, 0, 5);\n\n  &:hover {\n    border: none;\n    background-color: orange;\n    color: #fff;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Label, Button, Input } from './LoginForm.styled';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email'),\n  password: Yup.string().min(8, 'Password is too short'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    dispatch(logIn(values));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form autoComplete=\"off\">\n          <Label htmlFor=\"email\">Email</Label>\n          <Input type=\"email\" name=\"email\" id=\"email\" />\n          <ErrorMessage name=\"email\" component=\"div\" />\n\n          <Label htmlFor=\"password\">Password</Label>\n          <Input type=\"password\" name=\"password\" id=\"password\" />\n          <ErrorMessage name=\"password\" component=\"div\" />\n\n          <Button type=\"submit\" disabled={isSubmitting}>\n            {isSubmitting ? 'Loading...' : 'Log In'}\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["Label","styled","Input","Field","Button","validationSchema","Yup","shape","email","password","min","LoginForm","dispatch","useDispatch","initialValues","onSubmit","values","actions","logIn","resetForm","isSubmitting","autoComplete","htmlFor","type","name","id","component","disabled","Login"],"sourceRoot":""}