{"version":3,"file":"static/js/520.56b2c546.chunk.js","mappings":"4NAEIA,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,CACd,EAqBM,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKE,SAAWD,EAAKC,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASF,EAAKE,OAETC,EAAI,EAAGA,EAAID,EAAQC,IAC1B,IAAKT,EAAcM,EAAKG,GAAIF,EAAKE,IAC/B,OAAO,EAIX,OAAO,CACR,CACF,CAYkBC,CAAyBV,GACtCW,EAAoB,IAAZR,EA/Gd,SAA8BS,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAMG,MAGRxB,CACR,EACDyB,IAAK,SAAaF,EAAKC,GACrBH,EAAQ,CACNE,IAAKA,EACLC,MAAOA,EAEV,EACDE,WAAY,WACV,OAAOL,EAAQ,CAACA,GAAS,EAC1B,EACDM,MAAO,WACLN,OAAQO,CACT,EAEJ,CAwF6BC,CAAqBhB,GAtFnD,SAAwBF,EAASS,GAC/B,IAAIU,EAAU,GAEd,SAASR,EAAIC,GACX,IAAIQ,EAAaD,EAAQE,WAAU,SAAUX,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,IAC1B,IAED,GAAIQ,GAAc,EAAG,CACnB,IAAIV,EAAQS,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQb,IAGXA,EAAMG,KACd,CAGD,OAAOxB,CACR,CAwBD,MAAO,CACLsB,IAAKA,EACLG,IAxBF,SAAaF,EAAKC,GACZF,EAAIC,KAASvB,IAEf8B,EAAQI,QAAQ,CACdX,IAAKA,EACLC,MAAOA,IAGLM,EAAQd,OAASL,GACnBmB,EAAQK,MAGb,EAaCT,WAXF,WACE,OAAOI,CACR,EAUCH,MARF,WACEG,EAAU,EACX,EAQF,CAmCgEM,CAAezB,EAASE,GAEvF,SAASwB,IACP,IAAIb,EAAQL,EAAMG,IAAIgB,WAEtB,GAAId,IAAUxB,EAAW,CAIvB,GAFAwB,EAAQnB,EAAKkC,MAAM,KAAMD,WAErB1B,EAAqB,CACvB,IAAIkB,EAAUX,EAAMO,aAChBc,EAAgBV,EAAQW,MAAK,SAAUpB,GACzC,OAAOT,EAAoBS,EAAMG,MAAOA,EACzC,IAEGgB,IACFhB,EAAQgB,EAAchB,MAEzB,CAEDL,EAAMM,IAAIa,UAAWd,EACtB,CAED,OAAOA,CACR,CAMD,OAJAa,EAASK,WAAa,WACpB,OAAOvB,EAAMQ,OACd,EAEMU,CACR,CC/ID,SAASM,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CACf,IAAG,CACF,IAAIC,EAAkBL,EAAaM,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAIG,MAAQ,WAAa,YAAcH,CAC1F,IAAEI,KAAK,MACR,MAAM,IAAIC,MAAM,kGAAoGJ,EAAkB,IACvI,CAED,OAAOL,CACR,CAEM,SAASU,EAAsBC,GACpC,IAAK,IAAIC,EAAOnB,UAAUtB,OAAQ0C,EAAyB,IAAIZ,MAAMW,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAKrB,UAAUqB,GAG/C,IAAIC,EAAiB,WACnB,IAAK,IAAIC,EAAQvB,UAAUtB,OAAQ4B,EAAQ,IAAIE,MAAMe,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFlB,EAAMkB,GAASxB,UAAUwB,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBtC,GAGduC,EAAavB,EAAMT,MAQvB,GAN0B,kBAAfgC,IACTF,EAAwBE,EAExBA,EAAavB,EAAMT,OAGK,oBAAfgC,EACT,MAAM,IAAIb,MAAM,qFAAuFa,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBxB,MAAMC,QAAQmB,GAAkBA,EAAiB,CAACA,GACxErB,EAAeF,EAAgBC,GAC/B2B,EAAqBf,EAAQjB,WAAM,EAAQ,CAAC,WAG9C,OAFAyB,IAEOG,EAAW5B,MAAM,KAAMD,UAC/B,GAAEkC,OAAOF,IAENG,EAAWjB,GAAQ,WAIrB,IAHA,IAAIkB,EAAS,GACT1D,EAAS6B,EAAa7B,OAEjBC,EAAI,EAAGA,EAAID,EAAQC,IAG1ByD,EAAOC,KAAK9B,EAAa5B,GAAGsB,MAAM,KAAMD,YAK1C,OADAyB,EAAcQ,EAAmBhC,MAAM,KAAMmC,EAE9C,IAeD,OAdAE,OAAOC,OAAOJ,EAAU,CACtBN,WAAYA,EACZI,mBAAoBA,EACpB1B,aAAcA,EACdiC,WAAY,WACV,OAAOf,CACR,EACDgB,eAAgB,WACd,OAAOf,CACR,EACDgB,oBAAqB,WACnB,OAAOhB,EAAkB,CAC1B,IAEIS,CACR,EAGD,OAAOb,CACR,CACM,I,YAAIA,EAAgCL,EAAsBnD,GCnGpD6E,EAAkB,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,SAApB,EAEvBC,EAAc,SAAAH,GAAK,OAAIA,EAAMC,UAAUG,KAApB,EAEnBC,EAAe,SAAAL,GAAK,OAAIA,EAAMC,UAAUK,MAApB,EAEpBC,EAAwB7B,EACnC,CAT4B,SAAAsB,GAAK,OAAIA,EAAMC,UAAUO,QAApB,EAShBH,IACjB,SAACG,EAAUF,GACT,IAAMG,EAAmBH,EAAOI,cAChC,OAAOF,EAASF,QAAO,SAAAK,GAAO,OAC5BA,EAAQzC,KAAKwC,cAAcE,SAASH,EADR,GAG/B,I,mBCfUI,EAAOC,EAAAA,GAAAA,GAAH,uCAIJC,EAAWD,EAAAA,GAAAA,GAAH,0iBA2BRE,EAAMF,EAAAA,GAAAA,OAAH,me,SCvBHG,EAAW,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,IAAYd,GAC9BL,GAAYmB,EAAAA,EAAAA,IAAYtB,GACxBK,GAAQiB,EAAAA,EAAAA,IAAYlB,GACpBmB,GAAcD,EAAAA,EAAAA,IAAYhB,GAIhC,OACE,UAACQ,EAAD,YACE,qCACCX,IAAcE,IAAS,kDACI,IAA3BgB,EAAgBtF,QAAgC,KAAhBwF,IAC/B,qEACC,IACyB,IAA3BF,EAAgBtF,QAAgC,KAAhBwF,GAC/B,mFAEAF,EAAgBnD,KAAI,SAAA0C,GAAO,OACzB,UAACI,EAAD,YACE,yBACGJ,EAAQzC,KADX,MACoByC,EAAQY,WAE5B,SAACP,EAAD,CAAKQ,QAAS,kBAjBPC,EAiBsBd,EAAQc,GAjBxBP,GAASQ,EAAAA,EAAAA,IAAcD,IAA7B,IAAAA,CAiBO,EAAd,sBAJad,EAAQc,GADE,MAWlC,E,8BCrBGE,EAAS,WAGX,IAH0B,IAAdC,EAAc,uDAAP,GACfH,EAAK,GACLI,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWJ,IAC3CA,KAAQ,CACb,IAAIK,EAAqB,GAAdJ,EAAMD,GAEfH,GADEQ,EAAO,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAET,CACD,OAAOR,CACR,EChCYW,GAAQtB,EAAAA,EAAAA,IAAOuB,EAAAA,GAAPvB,CAAH,+hBA2BLwB,EAASxB,EAAAA,GAAAA,OAAH,oeCvBbyB,EAAaC,EAAAA,KAAaC,MAAM,CACpCvE,KAAMsE,EAAAA,KAAaE,IAAI,EAAG,cAAcC,IAAI,GAAI,aAChDpB,OAAQiB,EAAAA,KAAaE,IAAI,EAAG,cAAcC,IAAI,GAAI,eAGvCC,EAAW,WACtB,IAAM1B,GAAWC,EAAAA,EAAAA,MAKjB,OACE,SAAC,KAAD,CACE0B,cAAe,CACb3E,KAAM,GACNqD,OAAQ,IAEVuB,iBAAkBP,EAClBQ,SAAU,SAACzG,EAAO0G,GAVH,IAAAC,KAWF,kBACN3G,GADK,IAERmF,GAAIE,MAZVT,GAASgC,EAAAA,EAAAA,IAAWD,IAchBD,EAAQG,WACT,EAZH,UAcE,UAAC,KAAD,YACE,qCAEE,SAACf,EAAD,CACEgB,KAAK,OACLlF,KAAK,OACLmF,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,SAAC,KAAD,CAAcrF,KAAK,OAAOsF,UAAU,aAEtC,uCAEE,SAACpB,EAAD,CACEgB,KAAK,MACLlF,KAAK,SACLmF,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,SAAC,KAAD,CAAcrF,KAAK,SAASsF,UAAU,aAExC,SAAClB,EAAD,CAAQc,KAAK,SAAb,6BAIP,E,UC1DYhB,EAAQtB,EAAAA,GAAAA,MAAH,0hBCGL2C,EAAS,WACpB,IAAMvC,GAAWC,EAAAA,EAAAA,MAEXb,GAASe,EAAAA,EAAAA,IAAYhB,GAM3B,OACE,8BACE,mDACA,SAAC,EAAD,CAAO+C,KAAK,OAAO9G,MAAOgE,EAAQoD,SAPX,SAAAC,GACzBzC,GAAS0C,EAAAA,EAAAA,IAAUD,EAAME,OAAOvH,OACjC,MAQF,ECZc,SAASwH,IACtB,IAAM5C,GAAWC,EAAAA,EAAAA,MACXjB,GAAYmB,EAAAA,EAAAA,IAAYtB,GAM9B,OAJAgE,EAAAA,EAAAA,YAAU,WACR7C,GAAS8C,EAAAA,EAAAA,MACV,GAAE,CAAC9C,KAGF,iCACE,2CACA,SAAC0B,EAAD,KACA,SAACa,EAAD,KACA,SAACxC,EAAD,KACA,yBAAMf,GAAa,mCAGxB,C","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/Contacts/Contact.styled.js","components/Contacts/Contacts.js","../node_modules/nanoid/index.browser.js","components/NameForm/NameForm.styled.js","components/NameForm/NameForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","Pages/ContactPage.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.phonebook.contacts;\n\nexport const selectIsLoading = state => state.phonebook.isLoading;\n\nexport const selectError = state => state.phonebook.error;\n\nexport const selectFilter = state => state.phonebook.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 300px;\n  margin: 5px;\n\n  border: 1px solid #000;\n  color: black;\n  border-radius: 5px;\n  padding: 10px 25px;\n  background: #f5f5f5;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n\n  &:hover {\n    border-color: orange;\n  }\n\n  &: focus {\n    border-color: orange;\n  }\n`;\n\nexport const Btn = styled.button`\n  border: 1px solid #000;\n  padding: 5px 15px;\n  color: black;\n  border-radius: 5px;\n  background: #f5f5f5;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n  boxshadow: 0px 0px 2px 2px rgb(red, 0, 0, 5);\n\n  &:hover {\n    border: none;\n    background-color: orange;\n    color: #fff;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport {\n  selectVisibleContacts,\n  selectError,\n  selectIsLoading,\n  selectFilter,\n} from '../../redux/contacts/selectors';\nimport { List, ListItem, Btn } from './Contact.styled';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filterValue = useSelector(selectFilter);\n\n  const onDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <List>\n      <h2>Contacts</h2>\n      {isLoading && !error && <b>Request in progress...</b>}\n      {visibleContacts.length === 0 && filterValue === '' && (\n        <b>Your phone book doesn't have any contacts</b>\n      )}{' '}\n      {visibleContacts.length === 0 && filterValue !== '' ? (\n        <p>The contact with this name is not in your contact book.</p>\n      ) : (\n        visibleContacts.map(contact => (\n          <ListItem key={contact.id}>\n            <p>\n              {contact.name} : {contact.number}\n            </p>\n            <Btn onClick={() => onDelete(contact.id)}>Delete</Btn>\n          </ListItem>\n        ))\n      )}\n    </List>\n  );\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  margin: 16px 0;\n  padding: 10px;\n\n  border: 1px solid #000;\n  color: black;\n  border-radius: 5px;\n  padding: 10px 25px;\n  background: #f5f5f5;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n\n  &:hover {\n    border-color: orange;\n  }\n\n  &: focus {\n    border-color: orange;\n  }\n`;\n\nexport const Button = styled.button`\n  border: 1px solid #000;\n  padding: 10px 25px;\n  color: black;\n  border-radius: 5px;\n  background: #f5f5f5;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n  boxshadow: 0px 0px 2px 2px rgb(red, 0, 0, 5);\n\n  &:hover {\n    border: none;\n    background-color: orange;\n    color: #fff;\n  }\n`;\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport * as Yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { Input, Button } from './NameForm.styled';\n\nconst FormSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!'),\n  number: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!'),\n});\n\nexport const NameForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSave = newContact => {\n    dispatch(addContact(newContact));\n  };\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={FormSchema}\n      onSubmit={(value, actions) => {\n        handleSave({\n          ...value,\n          id: nanoid(),\n        });\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </label>\n        <label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </label>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  margin: 0;\n  padding: 10px;\n\n  border: 1px solid #000;\n  color: black;\n  border-radius: 5px;\n  padding: 10px 25px;\n  background: #f5f5f5;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n\n  &:hover {\n    border-color: orange;\n  }\n\n  &: focus {\n    border-color: orange;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/phonebookSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <label>\n      <h2>Find contacts by name</h2>\n      <Input type=\"text\" value={filter} onChange={handleFilterChange} />\n    </label>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Contacts } from '../components/Contacts/Contacts';\nimport { NameForm } from '../components/NameForm/NameForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { fetchContscts } from '../redux/contacts/operations';\nimport { selectIsLoading } from '../redux/contacts/selectors';\n\nexport default function ContactsList() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContscts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h2>Your contacts</h2>\n      <NameForm />\n      <Filter />\n      <Contacts />\n      <div>{isLoading && '111111Request in progress...'}</div>\n    </>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectIsLoading","state","phonebook","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","contacts","normalizedFilter","toLowerCase","contact","includes","List","styled","ListItem","Btn","Contacts","dispatch","useDispatch","visibleContacts","useSelector","filterValue","number","onClick","id","deleteContact","nanoid","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","Input","Field","Button","FormSchema","Yup","shape","min","max","NameForm","initialValues","validationSchema","onSubmit","actions","newContact","addContact","resetForm","type","pattern","title","required","component","Filter","onChange","event","setFilter","target","ContactsList","useEffect","fetchContscts"],"sourceRoot":""}