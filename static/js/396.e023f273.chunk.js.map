{"version":3,"file":"static/js/396.e023f273.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Contacts/Contact.styled.js","components/Contacts/Contacts.js","components/NameForm/NameForm.styled.js","components/NameForm/NameForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","Pages/ContactPage.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.phonebook.contacts;\n\nexport const selectIsLoading = state => state.phonebook.isLoading;\n\nexport const selectError = state => state.phonebook.error;\n\nexport const selectFilter = state => state.phonebook.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n padding: 0 30px;\n`;\n\nexport const ListItem = styled.li`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nwidth: 400px;\nmargin:  5px;\n`;\n\nexport const Btn = styled.button\n\n\n ","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport {\n  selectVisibleContacts,\n  selectError,\n  selectIsLoading,\n  selectFilter,\n} from '../../redux/contacts/selectors';\nimport { List, ListItem } from './Contact.styled';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filterValue = useSelector(selectFilter);\n\n  const onDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <List>\n      <h2>Contacts</h2>\n      {isLoading && !error && <b>Request in progress...</b>}\n      {visibleContacts.length === 0 && filterValue === '' && (\n        <b>Your phone book doesn't have any contacts</b>\n      )}{' '}\n      {visibleContacts.length === 0 && filterValue !== '' ? (\n        <p>The contact with this name is not in your contact book.</p>\n      ) : (\n        visibleContacts.map(contact => (\n          <ListItem key={contact.id}>\n            <p>\n              {contact.name} : {contact.number}\n            </p>\n            <button onClick={() => onDelete(contact.id)}>Delete</button>\n          </ListItem>\n        ))\n      )}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nconst Input = styled(Field)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 300px;\n  box-sizing: border-box;\n  margin: 20px 0;\n  padding: 10px;\n  `;\n\n  export default Input\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport * as Yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport Input from './NameForm.styled';\n\nconst FormSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!'),\n  number: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!'),\n});\n\nexport const NameForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSave = newContact => {\n    dispatch(addContact(newContact));\n  };\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={FormSchema}\n      onSubmit={(value, actions) => {\n        handleSave({\n          ...value,\n          id: nanoid(),\n        });\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </label>\n        <label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`;\n\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/phonebookSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <label>\n      <h3>Find contacts by name</h3>\n      <Input type=\"text\" value={filter} onChange={handleFilterChange} />\n    </label>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Contacts } from '../components/Contacts/Contacts';\nimport { NameForm } from '../components/NameForm/NameForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { fetchContscts } from '../redux/contacts/operations';\nimport { selectIsLoading } from '../redux/contacts/selectors';\n\nexport default function ContactsList() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContscts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h2>Your contacts</h2>\n      <NameForm />\n      <Filter />\n      <Contacts />\n      <div>{isLoading && '111111Request in progress...'}</div>\n    </>\n  );\n}\n"],"names":["selectIsLoading","state","phonebook","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","contacts","normalizedFilter","toLowerCase","contact","name","includes","List","styled","ListItem","Contacts","dispatch","useDispatch","visibleContacts","useSelector","filterValue","length","map","number","onClick","id","deleteContact","Field","FormSchema","Yup","shape","min","max","NameForm","initialValues","validationSchema","onSubmit","value","actions","newContact","nanoid","addContact","resetForm","type","pattern","title","required","component","Input","Filter","onChange","event","setFilter","target","ContactsList","useEffect","fetchContscts"],"sourceRoot":""}